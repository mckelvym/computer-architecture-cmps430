:vpi_time_precision + 0;
:vpi_module "system";
S_003DD308 .scope module, "top" "top";
 .timescale 0;
V_$005E3430 .var "A", 7, 0;
V_$005E3558 .var "B", 7, 0;
V_$005E36B0 .net "Sum", 7, 0, L_005E3C50, L_005E3FD8, L_005E42A8, L_005E45E0, L_005E4940, L_005E3630, L_005E4FF8, L_005E3670;
V_$005E3810 .net "c0", 0, 0, L_005E3D50;
V_$005E3878 .net "c1", 0, 0, L_005E40C0;
V_$005E38E0 .net "c2", 0, 0, L_005E43C0;
V_$005E3948 .net "c3", 0, 0, L_005E46C8;
V_$005E39D8 .net "c4", 0, 0, L_005E4A58;
V_$005E3A40 .net "c5", 0, 0, L_005E4D48;
V_$005E3AD8 .net "c6", 0, 0, L_005E50E0;
V_$005E3B40 .net "c7", 0, 0, L_005E5400;
V_$005E3BB0 .var "cin", 0, 0;
S_005E2F10 .scope module, "FBA0" "OneBitFullAdder", S_003DD308;
 .timescale 0;
L_005E3BE8 .functor XOR, V_$005E3430[0], V_$005E3558[0], C<0>, C<0>;
L_005E3C50 .functor XOR, L_005E3BE8, V_$005E3BB0[0], C<0>, C<0>;
L_005E3D18 .functor AND, V_$005E3430[0], V_$005E3558[0], C<1>, C<1>;
L_005E3DC0 .functor AND, V_$005E3430[0], V_$005E3BB0[0], C<1>, C<1>;
L_005E3E40 .functor OR, L_005E3D18, L_005E3DC0, C<0>, C<0>;
L_005E3E78 .functor AND, V_$005E3558[0], V_$005E3BB0[0], C<1>, C<1>;
L_005E3D50 .functor OR, L_005E3E40, L_005E3E78, C<0>, C<0>;
V_$005E2F80 .net "a", 0, 0, V_$005E3430[0];
V_$005E3008 .net "b", 0, 0, V_$005E3558[0];
V_$005E3080 .net "cin", 0, 0, V_$005E3BB0[0];
V_$005E3100 .net "cout", 0, 0, L_005E3D50;
V_$005E3138 .net "sum", 0, 0, L_005E3C50;
S_005E28F8 .scope module, "FBA1" "OneBitFullAdder", S_003DD308;
 .timescale 0;
L_005E3F40 .functor XOR, V_$005E3430[1], V_$005E3558[1], C<0>, C<0>;
L_005E3FD8 .functor XOR, L_005E3F40, L_005E3D50, C<0>, C<0>;
L_005E3D88 .functor AND, V_$005E3430[1], V_$005E3558[1], C<1>, C<1>;
L_005E40F8 .functor AND, V_$005E3430[1], L_005E3D50, C<1>, C<1>;
L_005E4088 .functor OR, L_005E3D88, L_005E40F8, C<0>, C<0>;
L_005E4178 .functor AND, V_$005E3558[1], L_005E3D50, C<1>, C<1>;
L_005E40C0 .functor OR, L_005E4088, L_005E4178, C<0>, C<0>;
V_$005E2968 .net "a", 0, 0, V_$005E3430[1];
V_$005E29F0 .net "b", 0, 0, V_$005E3558[1];
V_$005E2A68 .net "cin", 0, 0, L_005E3D50;
V_$005E2AE8 .net "cout", 0, 0, L_005E40C0;
V_$005E2B40 .net "sum", 0, 0, L_005E3FD8;
S_005E24B0 .scope module, "FBA2" "OneBitFullAdder", S_003DD308;
 .timescale 0;
L_005E4210 .functor XOR, V_$005E3430[2], V_$005E3558[2], C<0>, C<0>;
L_005E42A8 .functor XOR, L_005E4210, L_005E40C0, C<0>, C<0>;
L_005E41B0 .functor AND, V_$005E3430[2], V_$005E3558[2], C<1>, C<1>;
L_005E43F8 .functor AND, V_$005E3430[2], L_005E40C0, C<1>, C<1>;
L_005E4388 .functor OR, L_005E41B0, L_005E43F8, C<0>, C<0>;
L_005E4478 .functor AND, V_$005E3558[2], L_005E40C0, C<1>, C<1>;
L_005E43C0 .functor OR, L_005E4388, L_005E4478, C<0>, C<0>;
V_$005E2520 .net "a", 0, 0, V_$005E3430[2];
V_$005E25A8 .net "b", 0, 0, V_$005E3558[2];
V_$005E2620 .net "cin", 0, 0, L_005E40C0;
V_$005E26A0 .net "cout", 0, 0, L_005E43C0;
V_$005E26D8 .net "sum", 0, 0, L_005E42A8;
S_005E1F98 .scope module, "FBA3" "OneBitFullAdder", S_003DD308;
 .timescale 0;
L_005E4578 .functor XOR, V_$005E3430[3], V_$005E3558[3], C<0>, C<0>;
L_005E45E0 .functor XOR, L_005E4578, L_005E43C0, C<0>, C<0>;
L_005E4510 .functor AND, V_$005E3430[3], V_$005E3558[3], C<1>, C<1>;
L_005E4700 .functor AND, V_$005E3430[3], L_005E43C0, C<1>, C<1>;
L_005E4690 .functor OR, L_005E4510, L_005E4700, C<0>, C<0>;
L_005E4780 .functor AND, V_$005E3558[3], L_005E43C0, C<1>, C<1>;
L_005E46C8 .functor OR, L_005E4690, L_005E4780, C<0>, C<0>;
V_$005E2008 .net "a", 0, 0, V_$005E3430[3];
V_$005E2090 .net "b", 0, 0, V_$005E3558[3];
V_$005E2108 .net "cin", 0, 0, L_005E43C0;
V_$005E2188 .net "cout", 0, 0, L_005E46C8;
V_$005E21C0 .net "sum", 0, 0, L_005E45E0;
S_005E1A80 .scope module, "FBA4" "OneBitFullAdder", S_003DD308;
 .timescale 0;
L_005E48A8 .functor XOR, V_$005E3430[4], V_$005E3558[4], C<0>, C<0>;
L_005E4940 .functor XOR, L_005E48A8, L_005E46C8, C<0>, C<0>;
L_005E4818 .functor AND, V_$005E3430[4], V_$005E3558[4], C<1>, C<1>;
L_005E4A90 .functor AND, V_$005E3430[4], L_005E46C8, C<1>, C<1>;
L_005E4A20 .functor OR, L_005E4818, L_005E4A90, C<0>, C<0>;
L_005E4B10 .functor AND, V_$005E3558[4], L_005E46C8, C<1>, C<1>;
L_005E4A58 .functor OR, L_005E4A20, L_005E4B10, C<0>, C<0>;
V_$005E1AF0 .net "a", 0, 0, V_$005E3430[4];
V_$005E1B78 .net "b", 0, 0, V_$005E3558[4];
V_$005E1BF0 .net "cin", 0, 0, L_005E46C8;
V_$005E1C70 .net "cout", 0, 0, L_005E4A58;
V_$005E1CA8 .net "sum", 0, 0, L_005E4940;
S_005D0F88 .scope module, "FBA5" "OneBitFullAdder", S_003DD308;
 .timescale 0;
L_005E4C38 .functor XOR, V_$005E3430[5], V_$005E3558[5], C<0>, C<0>;
L_005E3630 .functor XOR, L_005E4C38, L_005E4A58, C<0>, C<0>;
L_005E4BA8 .functor AND, V_$005E3430[5], V_$005E3558[5], C<1>, C<1>;
L_005E4D80 .functor AND, V_$005E3430[5], L_005E4A58, C<1>, C<1>;
L_005E4E00 .functor OR, L_005E4BA8, L_005E4D80, C<0>, C<0>;
L_005E4E38 .functor AND, V_$005E3558[5], L_005E4A58, C<1>, C<1>;
L_005E4D48 .functor OR, L_005E4E00, L_005E4E38, C<0>, C<0>;
V_$005D0FF8 .net "a", 0, 0, V_$005E3430[5];
V_$005D1080 .net "b", 0, 0, V_$005E3558[5];
V_$005D10F8 .net "cin", 0, 0, L_005E4A58;
V_$005D1178 .net "cout", 0, 0, L_005E4D48;
V_$005D11B0 .net "sum", 0, 0, L_005E3630;
S_005CAA78 .scope module, "FBA6" "OneBitFullAdder", S_003DD308;
 .timescale 0;
L_005E4F60 .functor XOR, V_$005E3430[6], V_$005E3558[6], C<0>, C<0>;
L_005E4FF8 .functor XOR, L_005E4F60, L_005E4D48, C<0>, C<0>;
L_005E4ED0 .functor AND, V_$005E3430[6], V_$005E3558[6], C<1>, C<1>;
L_005E5118 .functor AND, V_$005E3430[6], L_005E4D48, C<1>, C<1>;
L_005E50A8 .functor OR, L_005E4ED0, L_005E5118, C<0>, C<0>;
L_005E5198 .functor AND, V_$005E3558[6], L_005E4D48, C<1>, C<1>;
L_005E50E0 .functor OR, L_005E50A8, L_005E5198, C<0>, C<0>;
V_$005CA2D0 .net "a", 0, 0, V_$005E3430[6];
V_$005CA320 .net "b", 0, 0, V_$005E3558[6];
V_$005CB518 .net "cin", 0, 0, L_005E4D48;
V_$005CAD70 .net "cout", 0, 0, L_005E50E0;
V_$005CADA8 .net "sum", 0, 0, L_005E4FF8;
S_003DD1E0 .scope module, "FBA7" "OneBitFullAdder", S_003DD308;
 .timescale 0;
L_005E52C0 .functor XOR, V_$005E3430[7], V_$005E3558[7], C<0>, C<0>;
L_005E3670 .functor XOR, L_005E52C0, L_005E50E0, C<0>, C<0>;
L_005E5230 .functor AND, V_$005E3430[7], V_$005E3558[7], C<1>, C<1>;
L_005E5438 .functor AND, V_$005E3430[7], L_005E50E0, C<1>, C<1>;
L_005E54B8 .functor OR, L_005E5230, L_005E5438, C<0>, C<0>;
L_005E54F0 .functor AND, V_$005E3558[7], L_005E50E0, C<1>, C<1>;
L_005E5400 .functor OR, L_005E54B8, L_005E54F0, C<0>, C<0>;
V_$005CC318 .net "a", 0, 0, V_$005E3430[7];
V_$005CD548 .net "b", 0, 0, V_$005E3558[7];
V_$005CCDB8 .net "cin", 0, 0, L_005E50E0;
V_$005CD6D0 .net "cout", 0, 0, L_005E5400;
V_$005C9538 .net "sum", 0, 0, L_005E3670;
    .scope S_003DD308;
T_0 ;
    %set/v V_$005E3430[0], 0, 7;
    %set V_$005E3430[7], 1;
    %set V_$005E3558[0], 1;
    %set/v V_$005E3558[1], 0, 7;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set/v V_$005E3430[0], 0, 7;
    %set V_$005E3430[7], 1;
    %set V_$005E3558[0], 1;
    %set/v V_$005E3558[1], 0, 7;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 6;
    %set V_$005E3430[7], 1;
    %set V_$005E3558[0], 1;
    %set/v V_$005E3558[1], 0, 7;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 6;
    %set V_$005E3430[7], 1;
    %set V_$005E3558[0], 1;
    %set/v V_$005E3558[1], 0, 7;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set/v V_$005E3430[0], 1, 4;
    %set/v V_$005E3430[4], 0, 4;
    %set/v V_$005E3558[0], 1, 4;
    %set/v V_$005E3558[4], 0, 4;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set/v V_$005E3430[0], 1, 4;
    %set/v V_$005E3430[4], 0, 4;
    %set/v V_$005E3558[0], 1, 4;
    %set/v V_$005E3558[4], 0, 4;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 2;
    %set V_$005E3430[3], 1;
    %set/v V_$005E3430[4], 0, 4;
    %set/v V_$005E3558[0], 1, 2;
    %set V_$005E3558[2], 0;
    %set V_$005E3558[3], 1;
    %set/v V_$005E3558[4], 0, 4;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 2;
    %set V_$005E3430[3], 1;
    %set/v V_$005E3430[4], 0, 4;
    %set/v V_$005E3558[0], 1, 2;
    %set V_$005E3558[2], 0;
    %set V_$005E3558[3], 1;
    %set/v V_$005E3558[4], 0, 4;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 2;
    %set V_$005E3430[3], 1;
    %set V_$005E3430[4], 0;
    %set V_$005E3430[5], 1;
    %set V_$005E3430[6], 0;
    %set V_$005E3430[7], 1;
    %set/v V_$005E3558[0], 1, 2;
    %set V_$005E3558[2], 0;
    %set V_$005E3558[3], 1;
    %set V_$005E3558[4], 0;
    %set V_$005E3558[5], 1;
    %set/v V_$005E3558[6], 0, 2;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 2;
    %set V_$005E3430[3], 1;
    %set V_$005E3430[4], 0;
    %set V_$005E3430[5], 1;
    %set V_$005E3430[6], 0;
    %set V_$005E3430[7], 1;
    %set/v V_$005E3558[0], 1, 2;
    %set V_$005E3558[2], 0;
    %set V_$005E3558[3], 1;
    %set V_$005E3558[4], 0;
    %set V_$005E3558[5], 1;
    %set/v V_$005E3558[6], 0, 2;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 2;
    %set V_$005E3430[3], 1;
    %set V_$005E3430[4], 0;
    %set V_$005E3430[5], 1;
    %set V_$005E3430[6], 0;
    %set V_$005E3430[7], 1;
    %set/v V_$005E3558[0], 1, 2;
    %set V_$005E3558[2], 0;
    %set V_$005E3558[3], 1;
    %set V_$005E3558[4], 0;
    %set V_$005E3558[5], 1;
    %set V_$005E3558[6], 0;
    %set V_$005E3558[7], 1;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 2;
    %set V_$005E3430[3], 1;
    %set V_$005E3430[4], 0;
    %set V_$005E3430[5], 1;
    %set V_$005E3430[6], 0;
    %set V_$005E3430[7], 1;
    %set/v V_$005E3558[0], 1, 2;
    %set V_$005E3558[2], 0;
    %set V_$005E3558[3], 1;
    %set V_$005E3558[4], 0;
    %set V_$005E3558[5], 1;
    %set V_$005E3558[6], 0;
    %set V_$005E3558[7], 1;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set V_$005E3430[1], 0;
    %set/v V_$005E3430[2], 1, 2;
    %set V_$005E3430[4], 0;
    %set V_$005E3430[5], 1;
    %set V_$005E3430[6], 0;
    %set V_$005E3430[7], 1;
    %set/v V_$005E3558[0], 1, 2;
    %set V_$005E3558[2], 0;
    %set/v V_$005E3558[3], 1, 3;
    %set V_$005E3558[6], 0;
    %set V_$005E3558[7], 1;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set V_$005E3430[1], 0;
    %set/v V_$005E3430[2], 1, 2;
    %set V_$005E3430[4], 0;
    %set V_$005E3430[5], 1;
    %set V_$005E3430[6], 0;
    %set V_$005E3430[7], 1;
    %set/v V_$005E3558[0], 1, 2;
    %set V_$005E3558[2], 0;
    %set/v V_$005E3558[3], 1, 3;
    %set V_$005E3558[6], 0;
    %set V_$005E3558[7], 1;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 7;
    %set V_$005E3558[0], 0;
    %set/v V_$005E3558[1], 1, 7;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 7;
    %set V_$005E3558[0], 0;
    %set/v V_$005E3558[1], 1, 7;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set V_$005E3430[0], 1;
    %set/v V_$005E3430[1], 0, 7;
    %set/v V_$005E3558[0], 1, 8;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %set/v V_$005E3430[0], 1, 8;
    %set/v V_$005E3558[0], 1, 8;
    %set V_$005E3BB0[0], 0;
    %delay 10;
    %set/v V_$005E3430[0], 1, 8;
    %set/v V_$005E3558[0], 1, 8;
    %set V_$005E3BB0[0], 1;
    %delay 10;
    %vpi_call "$dumpflush";
    %end;
    .thread T_0;
    .scope S_003DD308;
T_1 ;
    %vpi_call "$monitor", "A=%8b, B=%8b, cin=%b, Sum=%8b, c7=%b, time=%t\n", V_$005E3430, V_$005E3558, V_$005E3BB0, V_$005E36B0, V_$005E3B40, $time;
    %vpi_call "$dumpfile", "top.dump";
    %vpi_call "$dumpvars", 4'sb0101, S_003DD308;
    %end;
    .thread T_1;
