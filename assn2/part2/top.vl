// Class    : CMPS 430
// Section  : 001
// Problem  : Assignment #2
// Name     : McKelvy, James Markus
// CLID     : jmm0468

// first simple ALU CMPS 430 (UG) Fall 2006 – P2 (Problem 2)
// The inputs to the module are two 8-bit numbers, and also a 3-bit number
// Based on the ControlCode, the module performs operations

// The name of the file containing this code is Top.vl


module Top();

// input register 1, 8 bits
reg [7:0] A;
// input register 2, 8 bits
reg [7:0] B;
// control code register, 3 bits
reg [2:0] cc;
// output data, 8 bits
wire [7:0] out;

// declare a simple alu instance to perform alu operations
MYALU simpleALU(A, B, cc, out);

// begin testing the code
initial
	begin
		// test the (a | b)
		A = 8'b10000000;
		B = 8'b00000001;
		cc = 3'b000;

 		#10;
		// test the (a | b)
		A = 8'b10010000;
		B = 8'b10001001;
		cc = 3'b000;
		
 		#10;
		// test the (~a | ~b)
		A = 8'b10010000;
		B = 8'b10001001;
		cc = 3'b001;

 		#10;
		// test the (~a | ~b)
		A = 8'b10000000;
		B = 8'b00000001;
		cc = 3'b001;

 		#10;
		// test the (a & b)
		A = 8'b10000000;
		B = 8'b00000001;
		cc = 3'b010;

 		#10;
		// test the (a & b)
		A = 8'b10000000;
		B = 8'b11000001;
		cc = 3'b010;

 		#10;
		// test the (a & b)
		A = 8'b10001110;
		B = 8'b11001111;
		cc = 3'b010;
			
 		#10;
		// test the (a ^ b)
		A = 8'b10001110;
		B = 8'b11001111;
		cc = 3'b011;
	
 		#10;
		// test the (a ^ b)
		A = 8'b10000000;
		B = 8'b00000001;
		cc = 3'b011;

 		#10;
		// test the (a ^ b)
		A = 8'b10000001;
		B = 8'b10000001;
		cc = 3'b011;

 		#10;
		// test the default case
		A = 8'b10000001;
		B = 8'b10000001;
		cc = 3'b111;

 		#10;
		$dumpflush;
	end

// output changes to variables when they are made
initial
	begin
	$monitor("A=%8b, B=%8b, cc=%3b, out=%8b, time=%t\n", A, B, cc, out, $time);	
end

endmodule

